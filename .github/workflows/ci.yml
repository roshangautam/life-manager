name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  # Docker image settings
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # Database settings
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: lifemanager
  DATABASE_URL: postgresql://postgres:postgres@postgres:5432/lifemanager
  PYTHONPATH: ${{ github.workspace }}
  # Use the GitHub token for authentication
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y make
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        version: "1.7.0"
    
    - name: Install Python dependencies
      run: |
        make install
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker-container
        driver-opts: image=moby/buildkit:latest

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ env.GITHUB_TOKEN }}

    - name: Test Docker commands
      run: |
        # Test basic Docker commands
        echo "Testing Docker installation..."
        docker --version
        
        # Test Make docker commands
        echo "\nTesting Make docker commands..."
        cp .env.example .env
        make docker-up
        echo "\nChecking containers..."
        docker ps -a
        
        # Test database migration
        echo "\nTesting database migration..."
        make db-show
        
        # Clean up
        echo "\nCleaning up..."
        make docker-down
    
    - name: Build and push Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        labels: |
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.created=${{ github.event.repository.created_at }}
          org.opencontainers.image.title=Life Manager
          org.opencontainers.image.description="Life Manager Application"
